definitions:
  domain.AddItemRequest:
    properties:
      category:
        type: string
      desc:
        type: string
      name:
        type: string
      owner_id:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  domain.CreateOrderRequest:
    properties:
      customer_id:
        type: string
      item_ids:
        items:
          type: string
        type: array
    type: object
  domain.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  domain.Item:
    properties:
      category:
        type: string
      created_at:
        type: string
      desc:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  domain.RegisterUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  domain.UpdateItemRequest:
    properties:
      category:
        type: string
      desc:
        type: string
      name:
        type: string
      owner_id:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  domain.User:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: kovalev5690@gmail.com
    name: Kovalev Pavel
  description: This is an API for online store
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
  title: WebShop API
  version: "0.1"
paths:
  /shop/v1/items:
    get:
      description: Get items with specified price range
      parameters:
      - description: Price lower bound
        in: query
        name: from
        type: number
      - description: Price upper bound
        in: query
        name: to
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Get items within price range
      tags:
      - Items
  /shop/v1/items/{item_id}:
    get:
      description: Get item by ID
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Get item
      tags:
      - Items
    put:
      consumes:
      - application/json
      description: Update item entry
      parameters:
      - description: Request to update info in item
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateItemRequest'
      - description: Item id
        in: path
        name: item_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Update item info
      tags:
      - Items
  /shop/v1/items/new:
    post:
      consumes:
      - application/json
      description: Add item
      parameters:
      - description: Request to add an item
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/domain.AddItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Add item
      tags:
      - Items
  /shop/v1/items/recent:
    get:
      description: Get items that was added within last 3 days
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Get recenly added items
      tags:
      - Items
  /shop/v1/orders/new:
    post:
      consumes:
      - application/json
      description: Create order and record it
      parameters:
      - description: Request to create an order
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/domain.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Place new order
      tags:
      - Orders
  /shop/v1/user/{user_id}:
    get:
      description: Get user by ID
      parameters:
      - description: user ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Get user
      tags:
      - Users
  /shop/v1/user/{user_id}/items:
    get:
      description: Get all items that were created by user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Get items owned by 'user_id'
      tags:
      - Users
  /shop/v1/user/new:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Request to register new user
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/domain.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Register user
      tags:
      - Users
  /shop/v1/users/recent:
    get:
      description: Get last 2 added users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.Error'
      summary: Get recenly added users
      tags:
      - Users
swagger: "2.0"
